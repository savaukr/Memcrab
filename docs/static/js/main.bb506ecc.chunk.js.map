{"version":3,"sources":["components/AddRow/AddRow.js","components/DeleteRow/DeleteRow.js","components/Row/Row.js","components/Matrix/Matrix.js","App.js","reportWebVitals.js","index.js"],"names":["AddRow","addRowHandle","className","onClick","DeleteRow","footerClass","deleteHandle","ind","data-ind","Row","arrRow","increaseAmount","focusCeil","focusCeilSum","mouseOut","sum","row","reduce","summa","item","amount","getSumRow","map","styles","height","Math","round","bright","part","data-id","id","onMouseOver","onMouseOut","style","Matrix","arr","useState","matrixJSX","setMatrixJSX","getAverages","arrAverage","rowCount","length","columnCount","j","i","ceil","useEffect","table","getMatrixJsx","App","initialState","rows","columns","getMatrixRow","getMatrix","matrix","setMatrix","floor","random","event","concat","push","target","dataset","split","column","elem","X","arrSort","k","Object","assign","sort","a","b","start","end","index","findIndex","diffStart","diffEnd","slice","findXNearAmount","forEach","err","splice","console","log","message","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bb506ecc.chunk.js","sourcesContent":["import React from 'react'\nimport './AddRow.css'\n\nexport const AddRow = ({addRowHandle})=> {\n    return (\n        <div className=\"addrRow-wrap\">\n            <button onClick={addRowHandle}>Створити рядок</button>\n        </div>\n       \n    )\n}","import React from 'react'\r\n\r\nexport const DeleteRow = ({footerClass, deleteHandle, ind}) => {\r\n\r\n    if (footerClass) {\r\n        return (<></>)\r\n    } else {\r\n            return (\r\n                <>\r\n                    <button onClick={deleteHandle} data-ind={ind}>&times;</button>\r\n                </>\r\n            )\r\n    }\r\n}","import React from 'react'\r\nimport { DeleteRow } from '../DeleteRow/DeleteRow'\r\nimport './Row.css'\r\n\r\nexport const Row = ({arrRow, footerClass, deleteHandle, ind, increaseAmount, focusCeil, focusCeilSum, mouseOut } )=> {\r\n    const getSumRow = (row) => {\r\n        return row.reduce((summa, item) => summa+item.amount, 0) \r\n    }\r\n    const sum = getSumRow(arrRow)\r\n    \r\n\r\n    const row = arrRow.map((item) => {\r\n        const styles = {\r\n            height: Math.round(item.amount*100/sum)*2+'%'\r\n        }\r\n        return (\r\n            <div \r\n                key={item.id}\r\n                className={\r\n                    `matrix-ceil ${footerClass || ''} ${item.bright ? 'bright': ''} ${item.part ? 'part' : ''}`\r\n                }\r\n                //data-part={`${Math.round(item.amount*100/sum)}%`}\r\n                data-id= {item.id}\r\n                onClick={increaseAmount}\r\n                onMouseOver={focusCeil}\r\n                onMouseOut={mouseOut}\r\n            >\r\n                {item.part ? <div>{`${Math.round(item.amount*100/sum)}%`}</div> : item.amount }\r\n                <div style={styles}></div>       \r\n            </div>\r\n        )\r\n    })  \r\n\r\n    return (\r\n        <div className=\"matrix-row\">\r\n            <div className=\"matrix-ceil sidebar-row\">\r\n                <DeleteRow \r\n                    footerClass={footerClass}\r\n                    ind={ind}\r\n                    deleteHandle={deleteHandle}\r\n                />\r\n            </div>\r\n            {row}\r\n            <div \r\n                className=\"matrix-ceil sum\"\r\n                data-id={'sum'}\r\n                data-ind = {ind}\r\n                onMouseOver={focusCeilSum}\r\n                onMouseOut={focusCeilSum}\r\n            >\r\n                {sum}\r\n            </div>\r\n        </div> \r\n    )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {Row} from '../Row/Row'\r\nimport './Matrix.css'\r\n\r\nexport const Matrix = ({arr, deleteHandle, increaseAmount, focusCeil, focusCeilSum, mouseOut}) => {\r\n    const [matrixJSX, setMatrixJSX] = useState()\r\n\r\n    function getMatrixJsx(arr) {\r\n        let table=[]\r\n    \r\n        for (let i=0; i<arr.length; i++) { \r\n            table[i] = <Row\r\n                            key={i}\r\n                            arrRow = {arr[i]}\r\n                            deleteHandle={deleteHandle}\r\n                            ind={i}\r\n                            increaseAmount={increaseAmount}\r\n                            focusCeilSum={focusCeilSum}\r\n                            focusCeil={focusCeil}\r\n                            mouseOut={mouseOut}\r\n                        /> \r\n        }\r\n        table[arr.length] = <Row key={arr.length} arrRow = {getAverages(arr)}  footerClass={'footer'} />\r\n        return table\r\n    }\r\n\r\n    \r\n    const getAverages = (arr) => {\r\n        const arrAverage=[]\r\n        const rowCount = arr.length || 0\r\n        const columnCount = arr[0].length || 0\r\n        for (let j=0; j< columnCount; j++) {\r\n            let sum = 0\r\n            for (let i=0; i< rowCount; i++) {\r\n                sum += arr[i][j]['amount']\r\n            }\r\n            arrAverage[j] = {id: `footer${j}`, amount: Math.ceil(sum/rowCount) }\r\n        }\r\n        return arrAverage\r\n    }\r\n       \r\n\r\n    useEffect(()=> {\r\n        setMatrixJSX(getMatrixJsx(arr))\r\n    }, [arr])\r\n    \r\n    return (\r\n        <div className=\"matrix-wrap\">\r\n            <div className=\"matrix-content\">\r\n                <div className=\"matrix-header\">Сума по рядку</div>\r\n                {matrixJSX}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react'\r\nimport { AddRow } from './components/AddRow/AddRow'\r\nimport { Matrix } from './components/Matrix/Matrix'\r\n//import { serviceWrap } from './service/service'\r\n\r\n\r\nfunction App() {\r\n  const M=5 // кількість стрічок \r\n  const N=10 //кількість стовпчиків\r\n  const X = 5 // кількість близьких Amount\r\n  const initialState=getMatrix()\r\n  const [matrix, setMatrix] = useState(initialState)\r\n  \r\n  // const service = serviceWrap(M, N, X )\r\n  // const { getMatrixRow, getMatrix, addRowHandle, deleteHandle, increaseAmount, focusCeil, focusCeilSum } = service\r\n\r\n  // ///////////////////////////////////////////\r\n  function getMatrixRow(columns=N, i) {\r\n    const row=[]\r\n    for (let j=0; j < columns; j++) {\r\n      const amount = Math.floor( Math.random() * 1001)\r\n            row[j] = {id:`${i}x${j}`, amount, bright:false, part:false}\r\n    }\r\n    return row\r\n  }\r\n\r\n  function getMatrix(rows=M,columns=N) {\r\n    let table = []\r\n    for (let i=0; i< rows; i++) {\r\n        table[i]= getMatrixRow(columns, i) \r\n    }\r\n   return table\r\n  }\r\n\r\n  const addRowHandle = (event) => {\r\n    const arr = matrix.concat()\r\n    arr.push(getMatrixRow(N, matrix.length))\r\n    setMatrix(arr)\r\n  }\r\n\r\n  const deleteHandle = (event) => {\r\n    const arr = matrix.concat()\r\n    arr.splice(event.target.dataset.ind, 1)\r\n    for (let i= event.target.dataset.ind; i<arr.length; i++) {\r\n      for (let j=0; j< arr[i].length; j++) {\r\n        const row = +arr[i][j].id.split('x')[0]\r\n        arr[i][j].id = `${row-1}x${j}`\r\n      }\r\n    }\r\n    setMatrix(arr)\r\n  }\r\n\r\n  const increaseAmount = (event) => {\r\n    if (event.target.dataset.id) {\r\n      const arr = matrix.concat()\r\n      const row = +event.target.dataset.id.split('x')[0]\r\n      const column = +event.target.dataset.id.split('x')[1]\r\n      arr[row][column]['amount'] = arr[row][column]['amount']+1\r\n      setMatrix(arr)\r\n    }  \r\n  }\r\n\r\n  const focusCeil = (event) => {\r\n    try{\r\n      //Знаходження масиву найблищих елементів у матриці\r\n      const findXNearAmount = (arr, elem, X) => {\r\n        const arrSort = []\r\n        let k=0\r\n        for (let i=0; i < arr.length; i++ ) {\r\n          for (let j=0; j<arr[i].length; j++) {\r\n            arrSort[k] = Object.assign({}, arr[i][j])\r\n            k++\r\n          }\r\n        }\r\n        arrSort.sort((a,b)=>{\r\n          return a.amount - b.amount;\r\n        })\r\n      \r\n        const index = +arrSort.findIndex((item)=>item.amount === elem.amount)\r\n\r\n        let start, end\r\n        start= index - Math.ceil(X/2)\r\n        end = index + Math.ceil(X/2)\r\n\r\n        while (start < 0) { \r\n          start++\r\n          end++\r\n        }\r\n        while (end >= arrSort.length) { \r\n          start-- \r\n          end--\r\n        }\r\n        \r\n        if (X % 2) {\r\n          const diffStart = arrSort[start]['amount']-arrSort[index]['amount']\r\n          const diffEnd = arrSort[index]['amount'] - arrSort[end]['amount']\r\n          if ( (diffStart !== diffEnd) && (diffStart > diffEnd) )  start++ \r\n            else  end--\r\n        }\r\n       return [ ...arrSort.slice(start, index), ...arrSort.slice(index, end+1)]\r\n      }\r\n\r\n      if (event.target.dataset.id) {\r\n        \r\n        const row = +event.target.dataset.id.split('x')[0]\r\n        const column = +event.target.dataset.id.split('x')[1]\r\n        const arr = matrix.concat()\r\n\r\n        //arr[row][column]['bright'] = !arr[row][column]['bright'] //Підсвічування елемнта, на якому миша\r\n        let arrNear = findXNearAmount(arr, arr[row][column], X)\r\n        arrNear.forEach((elem) => {\r\n          const i = +elem.id.split('x')[0]\r\n          const j = +elem.id.split('x')[1]\r\n          elem.bright = !elem.bright\r\n          arr[i][j] = Object.assign({}, elem)\r\n        })\r\n              \r\n        setMatrix(arr)\r\n      } \r\n    } catch(err) {throw err}\r\n  }\r\n\r\n   const focusCeilSum = (event) => {\r\n      const ind = +event.target.dataset.ind\r\n      const arr = matrix.concat()\r\n      arr[ind].forEach((item)=> {\r\n        item.part = !item.part\r\n      })\r\n      setMatrix(arr)\r\n   }\r\n   const mouseOut = (event) => {\r\n    const arr = matrix.concat()\r\n    focusCeil(event)\r\n    arr.forEach( (row)=>{\r\n      row.forEach((ceil) => ceil.bright = false)\r\n    })\r\n   }\r\n\r\n  /////////////////////////////////////////\r\n\r\ntry {\r\n    if (!matrix.length) return (\r\n      <div className=\"container\">\r\n        <h1>Немає жодної стрічки!</h1>\r\n        <AddRow addRowHandle={addRowHandle} />\r\n      </div>\r\n    ) \r\n    return (\r\n      <div className=\"container\">\r\n        <Matrix \r\n          arr={matrix}\r\n          deleteHandle={deleteHandle}\r\n          increaseAmount={increaseAmount}\r\n          focusCeilSum={focusCeilSum}\r\n          focusCeil={focusCeil}\r\n          mouseOut={mouseOut}\r\n        />\r\n        <AddRow addRowHandle={addRowHandle} />\r\n      </div>\r\n    );\r\n} catch (err) {console.log(err.message)}\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}